name: CI/CD - Other Branches

on:
  push:
    branches-ignore:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v2

      - name: Ler versão do arquivo VERSIONS
        id: read_version
        run: echo "::set-env name=VERSION::$(cat VERSIONS)"

      - name: Exibir versão
        run:
          echo "Versão: ${{ env.VERSION }}"

      - name: Build do projeto
        run: |
          echo "Usando a versão $VERSION para o build"
          ./gradlew assemble -Pversion=${{ env.VERSION }}

      - name: Executar análise de segurança com Fortify
        run: |
          # Comando para executar a análise de segurança com Fortify
          # Substitua pelo comando específico do Fortify para o seu projeto
          fortify-analyze

      - name: Executar linting
        run: ./gradlew lint

      - name: Executar testes de unidade e cobertura com Jacoco
        run: ./gradlew test jacocoTestReport

      - name: Verificar cobertura mínima
        run: |
          # Lógica para verificar a cobertura mínima de 50%
          # Substitua pelo código específico para o seu projeto
          if [ "$(cat app/build/reports/jacoco/test/html/index.html | grep -oP 'span class=\"percentage\">\K(\d+(?:\.\d+)?)')" \< "50" ]; then
            echo "Cobertura de código inferior a 50%."
            exit 1
          fi

      - name: Publicar versão snapshot como Release
        run: |
          mkdir release
          cp app/build/outputs/apk/debug/app-debug.apk release/app-snapshot.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
